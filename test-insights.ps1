# Script de Teste - Dashboard de Insights
# Data: 11/10/2025

Write-Host "`nüß™ Testando Dashboard de Insights" -ForegroundColor Cyan
Write-Host "========================================`n" -ForegroundColor Cyan

$baseUrl = "http://localhost:3000"
$apiUrl = "$baseUrl/api"
$tenantId = "5978f911-738b-4aae-802a-f037fdac2e64"

# Fun√ß√£o auxiliar
function Test-API {
    param([string]$Name, [string]$Url)
    
    Write-Host "üîç $Name" -ForegroundColor Yellow
    try {
        $response = Invoke-RestMethod -Uri $Url -ErrorAction Stop
        Write-Host "   ‚úÖ OK" -ForegroundColor Green
        return $response
    } catch {
        Write-Host "   ‚ùå ERRO: $($_.Exception.Message)" -ForegroundColor Red
        return $null
    }
}

# Teste 1: Servidor rodando
Write-Host "`n=== TESTE 1: Servidor ===" -ForegroundColor Cyan
try {
    $health = Invoke-WebRequest -Uri "$baseUrl/dashboard.html" -UseBasicParsing -ErrorAction Stop
    Write-Host "‚úÖ Servidor rodando (HTTP $($health.StatusCode))" -ForegroundColor Green
    
    # Verificar se tem o menu Insights
    $content = $health.Content
    if ($content -like "*Insights*") {
        Write-Host "‚úÖ Menu Insights encontrado no HTML" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Menu Insights N√ÉO encontrado no HTML" -ForegroundColor Red
    }
    
} catch {
    Write-Host "‚ùå Servidor n√£o est√° rodando!" -ForegroundColor Red
    Write-Host "`nExecute: npm start" -ForegroundColor Yellow
    exit
}

# Teste 2: API de Anota√ß√µes
Write-Host "`n=== TESTE 2: API de Anota√ß√µes ===" -ForegroundColor Cyan
$anotacoes = Test-API -Name "Listar Anota√ß√µes" -Url "$apiUrl/agente/anotacoes/$tenantId?days=30"

if ($anotacoes) {
    Write-Host "   üìä Total: $($anotacoes.total)" -ForegroundColor White
    Write-Host "   üìù Anota√ß√µes: $($anotacoes.anotacoes.Count)" -ForegroundColor White
}

# Teste 3: API de Padr√µes
Write-Host "`n=== TESTE 3: API de Padr√µes ===" -ForegroundColor Cyan
$padroes = Test-API -Name "Padr√µes Identificados" -Url "$apiUrl/agente/anotacoes/padroes/$tenantId?days=30"

if ($padroes) {
    Write-Host "   üîç Padr√µes por tipo: $($padroes.padroes_por_tipo.Count)" -ForegroundColor White
    Write-Host "   üè∑Ô∏è  Tags frequentes: $($padroes.tags_frequentes.Count)" -ForegroundColor White
}

# Teste 4: API de Estat√≠sticas (NOVA)
Write-Host "`n=== TESTE 4: API de Estat√≠sticas (NOVA) ===" -ForegroundColor Cyan
$stats = Test-API -Name "Estat√≠sticas de Sentimentos" -Url "$apiUrl/analise-sentimento/estatisticas/$tenantId"

if ($stats) {
    Write-Host "   üìä Total an√°lises: $($stats.total_analises)" -ForegroundColor White
    Write-Host "   üòä Sentimento m√©dio: $($stats.sentimento_medio_numerico)/5" -ForegroundColor White
    Write-Host "   üìà Per√≠odo: $($stats.periodo_dias) dias" -ForegroundColor White
}

# Resumo
Write-Host "`n========================================" -ForegroundColor Cyan
Write-Host "üìä RESUMO DOS TESTES" -ForegroundColor Cyan
Write-Host "========================================" -ForegroundColor Cyan

if ($health -and $anotacoes -and $padroes -and $stats) {
    Write-Host "`n‚úÖ TODOS OS TESTES PASSARAM!" -ForegroundColor Green
    Write-Host "`nüåê Acesse o Dashboard:" -ForegroundColor Cyan
    Write-Host "   $baseUrl/dashboard.html" -ForegroundColor Yellow
    Write-Host "`nüí° Clique em 'Insights' no menu lateral" -ForegroundColor Cyan
    Write-Host "`nüîÑ Se n√£o aparecer, pressione Ctrl+Shift+R" -ForegroundColor Yellow
} else {
    Write-Host "`n‚ö†Ô∏è  ALGUNS TESTES FALHARAM" -ForegroundColor Yellow
    Write-Host "`nVerifique se:" -ForegroundColor White
    Write-Host "  1. Servidor est√° rodando (npm start)" -ForegroundColor White
    Write-Host "  2. Porta 3000 est√° dispon√≠vel" -ForegroundColor White
    Write-Host "  3. Banco de dados est√° conectado" -ForegroundColor White
}

Write-Host "`n"

