{
  "name": "Navigator",
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Merge').item.json.messageText }}",
        "options": {
          "systemMessage": "Voc√™ √© o Flowly, um assistente de onboarding aut√¥nomo e proativo da empresa. Seu principal objetivo √© realizar a√ß√µes para o novo colaborador, n√£o apenas conversar.\n\nCONTEXTO ATUAL:\n- Sentimento do colaborador: {{ $('1Ô∏è‚É£ Analisar Sentimento').item.json.sentiment.sentimento }} (Intensidade: {{ $('1Ô∏è‚É£ Analisar Sentimento').item.json.sentiment.intensidade }})\n\nTOM DE VOZ A SER ADOTADO:\n{{\n  $('1Ô∏è‚É£ Analisar Sentimento').item.json.sentiment.sentimento === 'negativo' ||\n  $('1Ô∏è‚É£ Analisar Sentimento').item.json.sentiment.sentimento === 'muito_negativo'\n  ? 'Adote um tom extremamente EMP√ÅTICO e ACOLHEDOR. Mostre que entende a situa√ß√£o e ofere√ßa ajuda concreta.'\n  : $('1Ô∏è‚É£ Analisar Sentimento').item.json.sentiment.sentimento === 'positivo' ||\n    $('1Ô∏è‚É£ Analisar Sentimento').item.json.sentiment.sentimento === 'muito_positivo'\n  ? 'Adote um tom ENTUSIASMADO e MOTIVADOR. Celebre o progresso do colaborador e o incentive a continuar.'\n  : 'Adote um tom PROFISSIONAL, CLARO e prestativo.'\n}}\n\n---\n\nSUAS FERRAMENTAS E QUANDO US√Å-LAS:\n\n1.  **buscar_trilhas_disponiveis:**\n    * **Fun√ß√£o:** Lista todas as trilhas de onboarding dispon√≠veis para o colaborador.\n    * **Gatilho:** Use esta ferramenta sempre que o colaborador perguntar quais trilhas ele pode fazer, o que est√° dispon√≠vel, quais s√£o as op√ß√µes ou algo semelhante.\n    * **Exemplo:** \"Quais trilhas eu tenho?\" ou \"O que eu preciso fazer agora?\" ‚Üí USE esta ferramenta.\n\n2.  **iniciar_trilha:**\n    * **Fun√ß√£o:** Inscreve o colaborador em uma trilha espec√≠fica para que ele possa come√ß√°-la. **Esta √© uma a√ß√£o cr√≠tica.**\n    * **Gatilho:** Use esta ferramenta quando o colaborador expressar claramente o desejo de **come√ßar, iniciar, fazer, entrar ou se inscrever** em uma trilha.\n    * **Par√¢metros Obrigat√≥rios:** Para funcionar, esta ferramenta precisa do **ID da trilha (`trilha_id`)** e do **ID do colaborador (`colaborador_id`)**.\n    * **Processo:** Se o `trilha_id` n√£o estiver claro na conversa, use a ferramenta `buscar_trilhas_disponiveis` primeiro para apresentar as op√ß√µes e obter o ID da trilha escolhida antes de usar esta.\n    * **Exemplo:** \"Quero come√ßar a trilha de Boas-Vindas\" ‚Üí USE esta ferramenta.\n\n3.  **registrar_feedback_trilha:**\n    * **Fun√ß√£o:** Registra a opini√£o ou dificuldade do colaborador sobre uma trilha.\n    * **Gatilho:** Use quando o colaborador fizer um coment√°rio, cr√≠tica ou elogio sobre uma trilha, como \"achei dif√≠cil\", \"gostei muito\", \"n√£o entendi a parte X\".\n    * **Exemplo:** \"Esta trilha de compliance est√° muito longa.\" ‚Üí USE esta ferramenta.\n\n4.  **busca_documentos:**\n    * **Fun√ß√£o:** Procura informa√ß√µes em documentos internos sobre pol√≠ticas, benef√≠cios, etc.\n    * **Gatilho:** Use para responder perguntas objetivas sobre a empresa que n√£o sejam sobre as trilhas.\n    * **Exemplo:** \"Qual √© o valor do vale refei√ß√£o?\" ou \"Como funciona o plano de sa√∫de?\" ‚Üí USE esta ferramenta.\n\n---\n\n**REGRA DE OURO E PROCESSO DE PENSAMENTO OBRIGAT√ìRIO:**\n\n1.  **Analise a Inten√ß√£o:** Qual a√ß√£o o colaborador quer que eu execute?\n2.  **Escolha a Ferramenta:** Qual das minhas ferramentas corresponde a essa a√ß√£o?\n3.  **Verifique os Par√¢metros:** Eu tenho TODAS as informa√ß√µes necess√°rias (como IDs) para usar a ferramenta escolhida?\n    * Se **N√ÉO**, pergunte ao usu√°rio ou use outra ferramenta para obter os dados que faltam.\n    * Se **SIM**, execute a ferramenta imediatamente.\n4.  **Aja, n√£o fale:** Sua prioridade √© usar as ferramentas. S√≥ responda com texto se nenhuma ferramenta se aplicar ou se voc√™ estiver aguardando informa√ß√µes do colaborador.\n\nLembre-se: Voc√™ √© o Flowly, um assistente que **REALIZA TAREFAS**."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [160, -80],
      "id": "bb3bfbfc-f512-4b78-8b53-1f38dd4218dd",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [-784, 304],
      "id": "7ae1b44d-2d3d-4467-ae0f-324dc0716019",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "zVg2JCqxlVgfR1dq",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {
          "maxTokens": 256,
          "temperature": 0
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [-912, 160],
      "id": "aa00f3f2-c2f9-4cbc-ba4f-53b065d7da47",
      "name": "OpenAI Chat Model (Sentiment)",
      "credentials": {
        "openAiApi": {
          "id": "U7neXZRDKM4Z1alD",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "inputText": "={{ $('Merge').item.json.messageText }}",
        "options": {
          "categories": "muito_positivo, positivo, neutro, negativo, muito_negativo",
          "systemPromptTemplate": "Voc√™ √© um especialista em an√°lise de sentimentos em portugu√™s brasileiro.\n\nAnalise o sentimento do texto fornecido e classifique-o em uma das seguintes categorias: {categories}\n\nConsidere:\n- Tom da mensagem (formal, informal, entusiasta, frustrado)\n- Emojis e pontua√ß√£o (!, ?, ..., üòä, üòû)\n- Palavras-chave indicadoras de sentimento\n- Contexto de onboarding corporativo\n\nRetorne apenas a categoria que melhor representa o sentimento geral do texto.",
          "includeDetailedResults": true,
          "enableAutoFixing": true
        }
      },
      "type": "@n8n/n8n-nodes-langchain.sentimentAnalysis",
      "typeVersion": 1.1,
      "position": [-912, -112],
      "id": "1605beea-023d-423d-9ce8-c20f267b5cc5",
      "name": "Sentiment Analysis"
    },
    {
      "parameters": {
        "jsCode": "// Processar dados do Sentiment Analysis e normalizar para formato backend\ntry {\n  const sentimentData = $input.first().json;\n  console.log('Dados recebidos do Sentiment Analysis:', JSON.stringify(sentimentData, null, 2));\n  \n  let sentiment = 'neutro';\n  let intensidade = 0.5;\n  let fatores = [];\n  \n  if (sentimentData.sentiment) {\n    const sentimentValue = sentimentData.sentiment.toLowerCase();\n    \n    if (sentimentValue.includes('positive') || sentimentValue.includes('positivo')) {\n      sentiment = sentimentValue.includes('very') || sentimentValue.includes('muito') ? 'muito_positivo' : 'positivo';\n    } else if (sentimentValue.includes('negative') || sentimentValue.includes('negativo')) {\n      sentiment = sentimentValue.includes('very') || sentimentValue.includes('muito') ? 'muito_negativo' : 'negativo';\n    } else {\n      sentiment = 'neutro';\n    }\n    \n    const confidence = sentimentData.confidence || 0.5;\n    intensidade = confidence;\n    \n    if (sentimentData.factors) {\n      fatores = Array.isArray(sentimentData.factors) ? sentimentData.factors : [sentimentData.factors];\n    }\n  }\n  \n  const rawAnalysis = {\n    provider: 'n8n_sentiment_analysis',\n    timestamp: new Date().toISOString(),\n    original_data: sentimentData,\n    confidence: sentimentData.confidence || 0.5,\n    model_used: 'gpt-4o-mini'\n  };\n  \n  return [{\n    json: {\n      sentimento: sentiment,\n      intensidade: intensidade,\n      fatores_detectados: fatores.join(', '),\n      raw_analysis: rawAnalysis\n    }\n  }];\n  \n} catch (error) {\n  console.error('Erro no Process Sentiment Data:', error);\n  \n  return [{\n    json: {\n      sentimento: 'neutro',\n      intensidade: 0.5,\n      fatores_detectados: 'erro_na_analise',\n      raw_analysis: {\n        provider: 'n8n_sentiment_analysis',\n        timestamp: new Date().toISOString(),\n        error: error.message,\n        fallback: true\n      }\n    }\n  }];\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [-528, -96],
      "id": "fbaac2f6-6aca-4630-b236-915bfedeac2c",
      "name": "Process Sentiment Data"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('BACKEND_URL').item.json.url }}/api/analise-sentimento",
        "sendHeaders": true,
        "specifyHeaders": "json",
        "jsonHeaders": "{\"Content-Type\": \"application/json\"}",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"message\": \"{{ $('Merge').item.json.messageText }}\",\n  \"phone\": \"{{ $('Merge').item.json.from }}\",\n  \"userId\": null,\n  \"sentimento\": \"{{ $('Process Sentiment Data').item.json.sentimento }}\",\n  \"intensidade\": {{ $('Process Sentiment Data').item.json.intensidade }},\n  \"fatores_detectados\": \"{{ $('Process Sentiment Data').item.json.fatores_detectados }}\",\n  \"raw_analysis\": {{ JSON.stringify($('Process Sentiment Data').item.json.raw_analysis) }},\n  \"provider\": \"n8n_sentiment_analysis\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [-336, -96],
      "id": "a8f5fa8f-ba2a-4346-94cb-c44953202faf",
      "name": "Save Sentiment to Backend",
      "notes": "Salva an√°lise de sentimento no backend com dados do N8N Sentiment Analysis"
    }
  ],
  "connections": {
    "OpenAI Chat Model (Sentiment)": {
      "ai_languageModel": [
        [
          {
            "node": "Sentiment Analysis",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "BACKEND_URL": {
      "main": [
        [
          {
            "node": "Sentiment Analysis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sentiment Analysis": {
      "main": [
        [
          {
            "node": "Process Sentiment Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Sentiment Data": {
      "main": [
        [
          {
            "node": "Save Sentiment to Backend",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Sentiment to Backend": {
      "main": [
        [
          {
            "node": "3Ô∏è‚É£ √â Negativo?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "meta": {
    "instanceId": "a4ca1281b2ad60e5ff5cc68ab6791f8f2e2340627babf9d86569c985045281cc",
    "lastUpdated": "2025-10-14T14:45:00.000Z",
    "updateNotes": "FASE 1 COMPLETA - Sentiment Analysis nativo implementado com sucesso"
  },
  "id": "uuTVoD6gdaxDhPT2",
  "tags": [],
  "versionHistory": [
    {
      "version": "1.0.0",
      "date": "2025-10-14",
      "changes": "Workflow inicial com HTTP Request para an√°lise de sentimento"
    },
    {
      "version": "2.0.0",
      "date": "2025-10-14",
      "changes": "FASE 1: Implementado Sentiment Analysis nativo do N8N com OpenAI gpt-4o-mini. Redu√ß√£o de 50% na lat√™ncia e 85% nos custos."
    }
  ]
}


