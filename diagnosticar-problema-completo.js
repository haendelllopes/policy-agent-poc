const axios = require('axios');

async function diagnosticarProblemaCompleto() {
  try {
    console.log('üîç DIAGN√ìSTICO COMPLETO DO PROBLEMA');
    console.log('=====================================');
    
    const userId = '4ab6c765-bcfc-4280-84cd-3190fcf881c2'; // Haendell Lopes
    const message = 'qual meu nome completo?';
    
    console.log('\nüìã DADOS DE ENTRADA:');
    console.log(`   ‚Ä¢ User ID: ${userId}`);
    console.log(`   ‚Ä¢ Mensagem: ${message}`);
    console.log(`   ‚Ä¢ Usu√°rio esperado: Haendell Lopes (Coordenador)`);
    
    // 1. TESTAR ENDPOINT DIRETO
    console.log('\nüîç TESTE 1: Endpoint direto');
    const endpointUrl = `https://navigator-gules.vercel.app/api/agent/trilhas/colaborador/${userId}`;
    console.log(`   ‚Ä¢ URL: ${endpointUrl}`);
    
    const endpointResponse = await axios.get(endpointUrl);
    console.log('   ‚úÖ Resposta do endpoint:');
    console.log(`      - Nome: ${endpointResponse.data.nome}`);
    console.log(`      - Cargo: ${endpointResponse.data.cargo}`);
    console.log(`      - Departamento: ${endpointResponse.data.departamento}`);
    
    // 2. TESTAR CHAT HTTP COMPLETO
    console.log('\nüîç TESTE 2: Chat HTTP completo');
    const chatUrl = 'https://navigator-gules.vercel.app/api/chat';
    console.log(`   ‚Ä¢ URL: ${chatUrl}`);
    
    const chatResponse = await axios.post(chatUrl, {
      message: message,
      userId: userId,
      context: {
        url: 'https://navigator-gules.vercel.app/dashboard.html',
        title: 'Insights - Navigator',
        timestamp: new Date().toISOString()
      }
    });
    
    console.log('   ‚úÖ Resposta do chat:');
    console.log(`      - Mensagem: ${chatResponse.data.message}`);
    
    // 3. ANALISAR DIFEREN√áAS
    console.log('\nüîç AN√ÅLISE:');
    console.log('   üìä Endpoint direto retorna:');
    console.log(`      - Nome: ${endpointResponse.data.nome}`);
    console.log(`      - Cargo: ${endpointResponse.data.cargo}`);
    
    console.log('   üìä Chat HTTP retorna:');
    const chatMessage = chatResponse.data.message;
    if (chatMessage.includes('Usu√°rio teste')) {
      console.log('      - ‚ùå PROBLEMA: Cont√©m "Usu√°rio teste"');
    } else if (chatMessage.includes('Haendell Lopes')) {
      console.log('      - ‚úÖ CORRETO: Cont√©m "Haendell Lopes"');
    } else {
      console.log('      - ‚ö†Ô∏è Gen√©rico ou diferente');
    }
    
    // 4. VERIFICAR SE H√Å DADOS MOCKADOS
    console.log('\nüîç TESTE 3: Verificar dados mockados');
    
    // Testar com ID do usu√°rio teste
    const usuarioTesteId = 'a4cd1933-f066-4595-a0b6-614a603f4bd3';
    const usuarioTesteResponse = await axios.get(`https://navigator-gules.vercel.app/api/agent/trilhas/colaborador/${usuarioTesteId}`);
    
    console.log('   üìä Usu√°rio teste retorna:');
    console.log(`      - Nome: ${usuarioTesteResponse.data.nome}`);
    console.log(`      - Cargo: ${usuarioTesteResponse.data.cargo}`);
    
    // 5. CONCLUS√ÉO
    console.log('\nüéØ CONCLUS√ÉO:');
    if (endpointResponse.data.nome === 'Haendell Lopes' && chatMessage.includes('Usu√°rio teste')) {
      console.log('   ‚ùå PROBLEMA IDENTIFICADO:');
      console.log('      - O endpoint funciona corretamente');
      console.log('      - Mas o chat HTTP retorna dados incorretos');
      console.log('      - O problema est√° no processamento interno do chat');
      console.log('      - Poss√≠vel causa: cache, dados mockados ou bug no personalizationEngine');
    } else if (endpointResponse.data.nome === 'Haendell Lopes' && chatMessage.includes('Haendell Lopes')) {
      console.log('   ‚úÖ TUDO FUNCIONANDO:');
      console.log('      - Endpoint e chat retornam dados corretos');
      console.log('      - O problema pode ter sido resolvido');
    } else {
      console.log('   ‚ö†Ô∏è SITUA√á√ÉO INESPERADA:');
      console.log('      - Investiga√ß√£o adicional necess√°ria');
    }
    
  } catch (error) {
    console.error('‚ùå Erro no diagn√≥stico:', error.message);
    if (error.response) {
      console.error('üìã Status:', error.response.status);
      console.error('üìã Dados:', error.response.data);
    }
  }
}

diagnosticarProblemaCompleto();

