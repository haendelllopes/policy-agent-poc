const WebSocket = require('ws');

async function testChatFlutuante() {
  console.log('üß™ Testando Chat Flutuante H√≠brido...\n');
  
  // 1. Teste de Conex√£o WebSocket
  console.log('1Ô∏è‚É£ Testando conex√£o WebSocket...');
  const ws = new WebSocket('ws://localhost:3000/ws/chat');
  
  ws.on('open', () => {
    console.log('‚úÖ WebSocket conectado');
    
    // 2. Teste de Mensagem Simples
    console.log('2Ô∏è‚É£ Testando mensagem simples...');
    ws.send(JSON.stringify({
      type: 'chat',
      userId: 'test-user-123',
      text: 'Ol√° Navi! Como voc√™ est√°?',
      context: { page: 'dashboard' }
    }));
  });
  
  ws.on('message', (data) => {
    const response = JSON.parse(data);
    console.log('üì® Resposta recebida:', response);
    
    if (response.type === 'response') {
      console.log('‚úÖ Chat funcionando corretamente');
      
      // 3. Teste de Ferramentas
      console.log('3Ô∏è‚É£ Testando ferramentas...');
      ws.send(JSON.stringify({
        type: 'chat',
        userId: 'test-user-123',
        text: 'Quais trilhas est√£o dispon√≠veis para mim?',
        context: { page: 'colaborador-trilhas' }
      }));
    }
  });
  
  ws.on('error', (error) => {
    console.error('‚ùå Erro WebSocket:', error);
  });
  
  // 4. Teste de An√°lise Background
  setTimeout(async () => {
    console.log('4Ô∏è‚É£ Testando an√°lise background...');
    const axios = require('axios');
    
    try {
      const response = await axios.post('http://localhost:3000/api/chat/analyze-background', {
        message: 'Estou com dificuldades na trilha de React',
        userId: 'test-user-123',
        context: { page: 'colaborador-trilha-detalhes' }
      });
      
      console.log('‚úÖ An√°lise background funcionando:', response.data);
    } catch (error) {
      console.error('‚ùå Erro na an√°lise background:', error.message);
    }
    
    ws.close();
    console.log('\nüéâ Testes conclu√≠dos!');
  }, 5000);
}

// Executar testes
testChatFlutuante().catch(console.error);
