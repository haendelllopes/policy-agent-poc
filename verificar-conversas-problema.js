const { createClient } = require('@supabase/supabase-js');
require('dotenv').config();

const supabaseUrl = process.env.SUPABASE_URL;
const supabaseKey = process.env.SUPABASE_ANON_KEY;

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå Credenciais do Supabase n√£o encontradas');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseKey);

async function verificarConversas() {
  try {
    console.log('üîç Verificando conversas na tabela conversation_history...');
    
    // Buscar todas as conversas
    const { data: conversations, error } = await supabase
      .from('conversation_history')
      .select('*')
      .order('created_at', { ascending: false })
      .limit(20);
    
    if (error) {
      console.error('‚ùå Erro ao buscar conversas:', error);
      return;
    }
    
    if (!conversations || conversations.length === 0) {
      console.log('‚ùå Nenhuma conversa encontrada');
      return;
    }
    
    console.log(`‚úÖ Encontradas ${conversations.length} conversas:`);
    
    // Agrupar por usu√°rio
    const conversationsByUser = {};
    conversations.forEach(conv => {
      if (!conversationsByUser[conv.user_id]) {
        conversationsByUser[conv.user_id] = [];
      }
      conversationsByUser[conv.user_id].push(conv);
    });
    
    console.log('\nüìã Conversas por usu√°rio:');
    Object.keys(conversationsByUser).forEach(userId => {
      const userConversations = conversationsByUser[userId];
      console.log(`\nüë§ Usu√°rio ${userId}:`);
      console.log(`   ‚Ä¢ Total de mensagens: ${userConversations.length}`);
      console.log(`   ‚Ä¢ √öltima mensagem: ${userConversations[0].created_at}`);
      console.log(`   ‚Ä¢ Primeira mensagem: ${userConversations[0].content.substring(0, 50)}...`);
      
      // Verificar se √© o usu√°rio correto
      if (userId === '4ab6c765-bcfc-4280-84cd-3190fcf881c2') {
        console.log('   ‚úÖ Este √© o usu√°rio correto (Haendell Lopes)');
      } else if (userId === 'a4cd1933-f066-4595-a0b6-614a603f4bd3') {
        console.log('   ‚ùå Este √© o usu√°rio teste (Usu√°rio teste)');
      }
    });
    
    // Verificar se h√° conversas do usu√°rio teste que podem estar causando confus√£o
    const usuarioTesteConversas = conversationsByUser['a4cd1933-f066-4595-a0b6-614a603f4bd3'];
    if (usuarioTesteConversas && usuarioTesteConversas.length > 0) {
      console.log('\n‚ö†Ô∏è PROBLEMA IDENTIFICADO:');
      console.log('   ‚Ä¢ Existem conversas do "Usu√°rio teste"');
      console.log('   ‚Ä¢ Isso pode estar causando confus√£o no GPT');
      console.log('   ‚Ä¢ O sistema pode estar carregando essas conversas antigas');
    }
    
    // Verificar se h√° conversas do usu√°rio correto
    const usuarioCorretoConversas = conversationsByUser['4ab6c765-bcfc-4280-84cd-3190fcf881c2'];
    if (usuarioCorretoConversas && usuarioCorretoConversas.length > 0) {
      console.log('\n‚úÖ SOLU√á√ÉO:');
      console.log('   ‚Ä¢ Existem conversas do usu√°rio correto (Haendell Lopes)');
      console.log('   ‚Ä¢ O problema pode estar no hist√≥rico sendo carregado');
    }
    
  } catch (error) {
    console.error('‚ùå Erro geral:', error);
  }
}

verificarConversas();
